
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "adf_publish" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    environment:
     name: UAT

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # install Az PowerShell module
      - name: Install Az PoweShell module
        run: Install-Module -Name Az -Scope CurrentUser -Repository PSGallery -Force 
        shell: pwsh
        
      # Log into Azure
      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZ_CREDENTIALS }}
          enable-AzPSSession: true 
      
      # stop triggers
      - name: Stop Trigger
        run: ./trigger-controller.ps1
        shell: pwsh
        env:
          armTemplate: ${{ secrets.AZ_ARM_TEMPLATE }}
          resourceGroupName: ${{ secrets.AZ_RESOURCE_GROUP }}
          dataFactoryName: ${{ secrets.AZ_DATA_FACTORY }}
          predeployment: ${{ secrets.STOP_TRIGGER_PREDEPLOYMENT }} 
          deleteDeployment: ${{ secrets.STOP_TRIGGER_DELETE_DEPLOYMENT }} 
          
      # Deploy ARM template
      - name: Run ARM deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZ_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ secrets.AZ_RESOURCE_GROUP }}
          template: ${{ secrets.AZ_ARM_TEMPLATE }}
          parameters: |
            ${{ secrets.AZ_ARM_PARAMETERS_TEMPLATE }} `
            factoryName=${{ secrets.AZ_DATA_FACTORY }} `
            "Linked service 1_connectionString"=${{ secrets.LINKED_SERVICE_1 }} `
            LinkedService2_connectionString=${{ secrets.LINKED_SERVICE_2 }}  
          failOnStdErr: false 
        
      # Start triggers
      - name: Start Trigger
        run: ./trigger-controller.ps1
        shell: pwsh
        env:
          armTemplate: ${{ secrets.AZ_ARM_TEMPLATE }}
          resourceGroupName: ${{ secrets.AZ_RESOURCE_GROUP }}
          predeployment: ${{ secrets.START_TRIGGER_PREDEPLOYMENT }} 
          deleteDeployment: ${{ secrets.START_TRIGGER_DELETE_DEPLOYMENT }}  
          
      # output containerName variable from template
      - name: output containerName
        run: echo ${{ steps.deploy.outputs.containerName }}
